{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/rockPaperScissors/src/components/GameResultsView/index.js\";\nimport { GameViewContainer, GameButton, GameImage, ResultImageContainer, ResultName, ResultText } from './styledComponents';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameResultsView = props => {\n  const {\n    choicesList,\n    isShow,\n    checkResult,\n    newArray,\n    text,\n    restartGame\n  } = props;\n\n  const showGame = () => /*#__PURE__*/_jsxDEV(GameViewContainer, {\n    children: [isShow && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GameButton, {\n        type: \"button\",\n        \"data-testid\": \"rockButton\",\n        onClick: () => checkResult(choicesList[0].id),\n        children: /*#__PURE__*/_jsxDEV(GameImage, {\n          src: choicesList[0].imageUrl,\n          alt: choicesList[0].id\n        }, choicesList[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameButton, {\n        type: \"button\",\n        \"data-testid\": \"scissorsButton\",\n        onClick: () => checkResult(choicesList[1].id),\n        children: /*#__PURE__*/_jsxDEV(GameImage, {\n          src: choicesList[1].imageUrl,\n          alt: choicesList[1].id\n        }, choicesList[1].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameButton, {\n        type: \"button\",\n        \"data-testid\": \"paperButton\",\n        onClick: () => checkResult(choicesList[2].id),\n        children: /*#__PURE__*/_jsxDEV(GameImage, {\n          src: choicesList[2].imageUrl,\n          alt: choicesList[2].id\n        }, choicesList[2].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !isShow && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ResultImageContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ResultName, {\n          children: \"YOU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameImage, {\n          src: newArray[0].imageUrl,\n          alt: \"your choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultImageContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ResultName, {\n          children: \"OPPONENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameImage, {\n          src: newArray[1].imageUrl,\n          alt: \"opponent choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultImageContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ResultText, {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"result-button\",\n          type: \"button\",\n          onClick: restartGame,\n          children: \"PLAY AGAIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n\n  return showGame();\n};\n\n_c = GameResultsView;\nexport default GameResultsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameResultsView\");","map":{"version":3,"names":["GameViewContainer","GameButton","GameImage","ResultImageContainer","ResultName","ResultText","GameResultsView","props","choicesList","isShow","checkResult","newArray","text","restartGame","showGame","id","imageUrl"],"sources":["/home/workspace/reactjs/coding-practices/rockPaperScissors/src/components/GameResultsView/index.js"],"sourcesContent":["import {\n  GameViewContainer,\n  GameButton,\n  GameImage,\n  ResultImageContainer,\n  ResultName,\n  ResultText,\n} from './styledComponents'\n\nimport './index.css'\n\nconst GameResultsView = props => {\n  const {choicesList, isShow, checkResult, newArray, text, restartGame} = props\n  const showGame = () => (\n    <GameViewContainer>\n      {isShow && (\n        <>\n          <GameButton\n            type=\"button\"\n            data-testid=\"rockButton\"\n            onClick={() => checkResult(choicesList[0].id)}\n          >\n            <GameImage\n              src={choicesList[0].imageUrl}\n              alt={choicesList[0].id}\n              key={choicesList[0].id}\n            />\n          </GameButton>\n          <GameButton\n            type=\"button\"\n            data-testid=\"scissorsButton\"\n            onClick={() => checkResult(choicesList[1].id)}\n          >\n            <GameImage\n              src={choicesList[1].imageUrl}\n              alt={choicesList[1].id}\n              key={choicesList[1].id}\n            />\n          </GameButton>\n          <GameButton\n            type=\"button\"\n            data-testid=\"paperButton\"\n            onClick={() => checkResult(choicesList[2].id)}\n          >\n            <GameImage\n              src={choicesList[2].imageUrl}\n              alt={choicesList[2].id}\n              key={choicesList[2].id}\n            />\n          </GameButton>\n        </>\n      )}\n      {!isShow && (\n        <>\n          <ResultImageContainer>\n            <ResultName>YOU</ResultName>\n            <GameImage src={newArray[0].imageUrl} alt=\"your choice\" />\n          </ResultImageContainer>\n          <ResultImageContainer>\n            <ResultName>OPPONENT</ResultName>\n            <GameImage src={newArray[1].imageUrl} alt=\"opponent choice\" />\n          </ResultImageContainer>\n          <ResultImageContainer>\n            <ResultText>{text}</ResultText>\n            <button\n              className=\"result-button\"\n              type=\"button\"\n              onClick={restartGame}\n            >\n              PLAY AGAIN\n            </button>\n          </ResultImageContainer>\n        </>\n      )}\n    </GameViewContainer>\n  )\n  return showGame()\n}\n\nexport default GameResultsView\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/rockPaperScissors/src/components/RpsPage/index.js\";\nimport { Component } from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport { RiCloseLine } from 'react-icons/ri';\nimport ScoreView from '../ScoreView';\nimport GameResultsView from '../GameResultsView';\nimport './index.css';\nimport { MainContainer, RulesView, PopUpView, PopUpImage } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst choicesList = [{\n  id: 'ROCK',\n  imageUrl: 'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png'\n}, {\n  id: 'SCISSORS',\n  imageUrl: 'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png'\n}, {\n  id: 'PAPER',\n  imageUrl: 'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png'\n}];\n\nclass RpsPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isShow: true,\n      newArray: [choicesList[0], choicesList[1]],\n      text: 'YOU WON',\n      score: 0\n    };\n\n    this.getResult = (item1, item2) => {\n      if (item1.id === 'ROCK') {\n        switch (item2.id) {\n          case 'PAPER':\n            return 'YOU LOSE';\n\n          case 'SCISSORS':\n            return 'YOU WON';\n\n          default:\n            return 'IT IS DRAW';\n        }\n      } else if (item1.id === 'PAPER') {\n        switch (item2.id) {\n          case 'ROCK':\n            return 'YOU WON';\n\n          case 'SCISSORS':\n            return 'YOU LOSE';\n\n          default:\n            return 'IT IS DRAW';\n        }\n      } else {\n        switch (item2.id) {\n          case 'ROCK':\n            return 'YOU LOSE';\n\n          case 'PAPER':\n            return 'YOU WON';\n\n          default:\n            return 'IT IS DRAW';\n        }\n      }\n    };\n\n    this.restartGame = () => this.setState({\n      isShow: true\n    });\n\n    this.checkResult = id => {\n      const {\n        score\n      } = this.state;\n      const choice2 = choicesList[Math.floor(Math.random() * choicesList.length)];\n      const choice1 = choicesList.filter(eachValue => eachValue.id === id);\n      const result = this.getResult(choice1[0], choice2);\n      let newScore = score;\n\n      if (result === 'YOU WON') {\n        newScore = score + 1;\n      } else if (result === 'YOU LOSE') {\n        newScore = score - 1;\n      } else {\n        newScore = score;\n      }\n\n      this.setState({\n        isShow: false,\n        newArray: [choice1[0], choice2],\n        text: result,\n        score: newScore\n      });\n    };\n  }\n\n  render() {\n    const {\n      isShow,\n      newArray,\n      text,\n      score\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(MainContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ScoreView, {\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameResultsView, {\n        choicesList: choicesList,\n        text: text,\n        isShow: isShow,\n        newArray: newArray,\n        checkResult: this.checkResult,\n        restartGame: this.restartGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RulesView, {\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          modal: true,\n          trigger: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"trigger-button\",\n            children: \"RULES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this),\n          children: close => /*#__PURE__*/_jsxDEV(PopUpView, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"trigger-button-close\",\n              onClick: () => close(),\n              children: /*#__PURE__*/_jsxDEV(RiCloseLine, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PopUpImage, {\n              src: \"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png\",\n              alt: \"rules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RpsPage;","map":{"version":3,"names":["Component","Popup","RiCloseLine","ScoreView","GameResultsView","MainContainer","RulesView","PopUpView","PopUpImage","choicesList","id","imageUrl","RpsPage","state","isShow","newArray","text","score","getResult","item1","item2","restartGame","setState","checkResult","choice2","Math","floor","random","length","choice1","filter","eachValue","result","newScore","render","close"],"sources":["/home/workspace/reactjs/coding-practices/rockPaperScissors/src/components/RpsPage/index.js"],"sourcesContent":["import {Component} from 'react'\n\nimport Popup from 'reactjs-popup'\n\nimport 'reactjs-popup/dist/index.css'\n\nimport {RiCloseLine} from 'react-icons/ri'\n\nimport ScoreView from '../ScoreView'\n\nimport GameResultsView from '../GameResultsView'\n\nimport './index.css'\n\nimport {\n  MainContainer,\n  RulesView,\n  PopUpView,\n  PopUpImage,\n} from './styledComponents'\n\nconst choicesList = [\n  {\n    id: 'ROCK',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',\n  },\n  {\n    id: 'SCISSORS',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',\n  },\n  {\n    id: 'PAPER',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',\n  },\n]\n\nclass RpsPage extends Component {\n  state = {\n    isShow: true,\n    newArray: [choicesList[0], choicesList[1]],\n    text: 'YOU WON',\n    score: 0,\n  }\n\n  getResult = (item1, item2) => {\n    if (item1.id === 'ROCK') {\n      switch (item2.id) {\n        case 'PAPER':\n          return 'YOU LOSE'\n        case 'SCISSORS':\n          return 'YOU WON'\n        default:\n          return 'IT IS DRAW'\n      }\n    } else if (item1.id === 'PAPER') {\n      switch (item2.id) {\n        case 'ROCK':\n          return 'YOU WON'\n        case 'SCISSORS':\n          return 'YOU LOSE'\n        default:\n          return 'IT IS DRAW'\n      }\n    } else {\n      switch (item2.id) {\n        case 'ROCK':\n          return 'YOU LOSE'\n        case 'PAPER':\n          return 'YOU WON'\n        default:\n          return 'IT IS DRAW'\n      }\n    }\n  }\n\n  restartGame = () => this.setState({isShow: true})\n\n  checkResult = id => {\n    const {score} = this.state\n    const choice2 = choicesList[Math.floor(Math.random() * choicesList.length)]\n    const choice1 = choicesList.filter(eachValue => eachValue.id === id)\n    const result = this.getResult(choice1[0], choice2)\n    let newScore = score\n    if (result === 'YOU WON') {\n      newScore = score + 1\n    } else if (result === 'YOU LOSE') {\n      newScore = score - 1\n    } else {\n      newScore = score\n    }\n    this.setState({\n      isShow: false,\n      newArray: [choice1[0], choice2],\n      text: result,\n      score: newScore,\n    })\n  }\n\n  render() {\n    const {isShow, newArray, text, score} = this.state\n    return (\n      <MainContainer>\n        <ScoreView score={score} />\n        <GameResultsView\n          choicesList={choicesList}\n          text={text}\n          isShow={isShow}\n          newArray={newArray}\n          checkResult={this.checkResult}\n          restartGame={this.restartGame}\n        />\n        <RulesView>\n          <Popup\n            modal\n            trigger={\n              <button type=\"button\" className=\"trigger-button\">\n                RULES\n              </button>\n            }\n          >\n            {close => (\n              <PopUpView>\n                <button\n                  type=\"button\"\n                  className=\"trigger-button-close\"\n                  onClick={() => close()}\n                >\n                  <RiCloseLine />\n                </button>\n                <PopUpImage\n                  src=\"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png\"\n                  alt=\"rules\"\n                />\n              </PopUpView>\n            )}\n          </Popup>\n        </RulesView>\n      </MainContainer>\n    )\n  }\n}\n\nexport default RpsPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}